name: Build Workflow

on:
  workflow_dispatch:
  pull_request:
    types:
      - opened
  push:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v4
      - name: Install NodeJs
        uses: actions/setup-node@v4
        with:
          node-version: 18.19.1
      - name: Install dependencies
        working-directory: ng-github-action-demo
        run: npm ci
      - name: Linting
        working-directory: ng-github-action-demo
        run: npm run lint
  test:
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v4
      - name: Install NodeJs
        uses: actions/setup-node@v4
        with:
          node-version: 18.19.1
      - name: Install dependencies
        working-directory: ng-github-action-demo
        run: npm ci
      - name: Run Tests
        working-directory: ng-github-action-demo
        run: npm run test-headless

  sonarqube:
    needs: test
    name: SonarQube
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          ./gradlew sonarqube \
            -Dsonar.login=$SONAR_TOKEN

  build:
    needs: sonarqube
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v4
      - name: Install NodeJs
        uses: actions/setup-node@v4
        with:
          node-version: 18.19.1
      - name: Install depenencies
        working-directory: ng-github-action-demo
        run: npm ci
      - name: build project
        working-directory: ng-github-action-demo
        run: npm run build
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-files
          path: ng-github-action-demo/dist

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-files
          path: ng-github-action-demo/dist
      - name: Output contents
        run: ls
      - name: deploy
        run: echo "deploying...."
